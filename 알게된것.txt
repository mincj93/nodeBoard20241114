1. process.cwd()
const mainPage = __dirname + '../../../front/main';
위처럼 ../../../ 하다가 죽을 수도 있을 것 같아서 짧게하는 방법 찾아봄.

process.cwd() 함수를 사용하면 node명령을 호출한 작업디렉터리의 절대경로를 준다.
예시) C:\Users\Administrator\Desktop\P\nodeBoard



2. AWS lightsail
1) 퍼블릭 IPv4 : 서버 기동 후 접속할 주소
2) IPv4 방화벽 : 접속가능한 어플리케이션을 지정하고 포트를 지정해주면 해당 포트번호로 지정한 앱이 AWS 서버에 접속가능함
3) mysql 에서 access denied 뜨면 권한과 관련있다. mysql 계정생성 및 권한부여 방법 찾아서 그대로 하면 된다.
4) .env 파일은 깃헙 깃랩 이런데에 올리면 안되는데 그럼 어떤식으로 process.env 값을 지정하냐?
>> AWS 에 올린 프로젝트 루트경로에 진입하고 해당 경로에 vi 명령어로 작성한다.
   1. vi .env     .env파일 없으면 생성하고 해당 파일 수정화면 진입. .env 파일이 기존에 있으면 수정화면으로 진입.
   2. i 키를 누르면 글자입력가능. esc 눌러서 글자입력 완료.
   3. :wq 를 입력하면 입력한 것 저장 및 파일 나오기.
   4. :q 를 입력하면 입력한것 저장 안 하고 파일 나오기.
5) 리눅스 명령어로 git, pm2, nvm, node 등등 설치하면 된다.
6) "네트워킹" 탭에서 "IPv4 네트워킹" 항목의 "퍼블릭 IPv4" 칸을 보면 고정 아이피를 만드는 란이 있음. 해당 아이피를 고정시키면 불변의 IP가 되는것.
>> 서비스를 다 만들면 서비스의 시작 포트를 80으로 하자. 80으로 지정하면 주소창에 포트번호 안 써도 된다.
>> ex) 123.32.42.12:포트번호   >>   123.32.42.12  만 쳐도 접속됨

3. public 폴더 접근 기준
1) src폴더 속 jsx파일은 절대경로를 public폴더로 기준으로 하기 때문에 PUBLIC_URL 환경변수를 사용해 접근하면 된다.
ex) <img src={`${process.env.PUBLIC_URL}/images/me.jpg`} /> 



#1 mariaDB 접속
# mysql -u root -p

#2 Database 확인
# show databases;# create database DB명;

#3 생성된 database 접속
# use DB명;

#4 user 계정 생성
# create user '계정'@'접속위치' identified by '패스워드';

ex) create user 'test'@'127.0.0.1' identified by 'Password'; -- 내부접속만 허용

ex) create user 'test2'@'%' identified by 'Password'; -- 외부접속 허용

#5 user 권한 주기
# grant all privileges on DB이름.테이블 to '계정'@'접속위치';

ex) grant all privileges on testDB.* to 'test2'@'%';

#6 권한 적용
# flush privileges;

#7 권한 확인
# show grants for '계정'@'접속위치';

#8 계정, 권한 삭제
# drop user '계정아이디'@'접속위치';

# reboke all on DB이름.테이블 from '계정아이디'@'접속위치';




// 리눅스
* nvm 설치 명령어
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

* nvm 설치 적용 명령어
source ~/.bashrc



// .env
HOST 값을 aws ip주소로 할당하면 로컬pc 에서 서버를 기동해도 로컬서버에 로그가 안 찍힌다.
